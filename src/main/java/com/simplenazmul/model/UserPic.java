package com.simplenazmul.model;

import java.sql.Timestamp;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;



@Entity
@Table(name="USER_PICTURE_TABLE")
public class UserPic {

	@Column(name="picture_id")
	@Id @GeneratedValue(strategy=GenerationType.IDENTITY)
	private int pictureId;
	
	@Column(name="picture_caption")
	private String pictureCaption;
	
	@Column(name="picture_created_timestamp", nullable=false)
	private Timestamp pictureCreatedTimestamp;


	@Column(name="ednet_user_id")
	private int userId;
	
	
	@Column(name="album_id")
	private int album;
	
	@Column(name="privacy_type")
	private String privacy;
	
	@Column(name="picture_name_auto_generated", unique = true)
	private String pictureNameAutoGenerated;
	
	@Transient
	private String timeAgo;
	
	@Transient
	private int likeCount;
	
	@Transient
	private int disLikeCount;
	
	@Transient
	private int totalComments;
	


	public int getTotalComments() {
		return totalComments;
	}

	public void setTotalComments(int totalComments) {
		this.totalComments = totalComments;
	}

	public int getDisLikeCount() {
		return disLikeCount;
	}

	public void setDisLikeCount(int disLikeCount) {
		this.disLikeCount = disLikeCount;
	}

	public int getLikeCount() {
		return likeCount;
	}

	public void setLikeCount(int likeCount) {
		this.likeCount = likeCount;
	}



	public String getTimeAgo() {
		return timeAgo;
	}

	public void setTimeAgo(String timeAgo) {
		this.timeAgo = timeAgo;
	}

	public int getPictureId() {
		return pictureId;
	}

	public void setPictureId(int pictureId) {
		this.pictureId = pictureId;
	}

	public String getPictureCaption() {
		return pictureCaption;
	}

	public void setPictureCaption(String pictureCaption) {
		this.pictureCaption = pictureCaption;
	}

	public Timestamp getPictureCreatedTimestamp() {
		return pictureCreatedTimestamp;
	}

	public void setPictureCreatedTimestamp(Timestamp pictureCreatedTimestamp) {
		this.pictureCreatedTimestamp = pictureCreatedTimestamp;
	}




	public int getUserId() {
		return userId;
	}

	public void setUserId(int userId) {
		this.userId = userId;
	}



	public int getAlbum() {
		return album;
	}

	public void setAlbum(int album) {
		this.album = album;
	}

	public String getPrivacy() {
		return privacy;
	}

	public void setPrivacy(String privacy) {
		this.privacy = privacy;
	}
	
	

	public String getPictureNameAutoGenerated() {
		return pictureNameAutoGenerated;
	}

	public void setPictureNameAutoGenerated(String pictureNameAutoGenerated) {
		this.pictureNameAutoGenerated = pictureNameAutoGenerated;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + pictureId;
		result = prime * result + ((pictureNameAutoGenerated == null) ? 0 : pictureNameAutoGenerated.hashCode());
		result = prime * result + userId;
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		UserPic other = (UserPic) obj;
		if (pictureId != other.pictureId)
			return false;
		if (pictureNameAutoGenerated == null) {
			if (other.pictureNameAutoGenerated != null)
				return false;
		} else if (!pictureNameAutoGenerated.equals(other.pictureNameAutoGenerated))
			return false;
		if (userId != other.userId)
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "UserPic [pictureId=" + pictureId + ", pictureCaption=" + pictureCaption + ", pictureCreatedTimestamp="
				+ pictureCreatedTimestamp + ", userId=" + userId + ", album=" + album + ", privacy=" + privacy
				+ ", pictureNameAutoGenerated=" + pictureNameAutoGenerated + ", timeAgo=" + timeAgo + ", likeCount="
				+ likeCount + ", disLikeCount=" + disLikeCount + ", totalComments=" + totalComments + "]";
	}





	
}
